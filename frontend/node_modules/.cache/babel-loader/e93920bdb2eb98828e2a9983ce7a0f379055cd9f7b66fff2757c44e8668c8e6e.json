{"ast":null,"code":"import api from'./api';export const stockAPI={// Get all stock items\ngetStockItems:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/stock',{params:filters});return response.data||[];}catch(error){return[{id:1,product:'Product 1',unitCost:25.50,unit:'Pieces',totalValue:2550,onHand:100,freeToUse:80,incoming:20,outgoing:0},{id:2,product:'Product 2',unitCost:15.75,unit:'Pieces',totalValue:1575,onHand:100,freeToUse:100,incoming:0,outgoing:0},{id:3,product:'Product 3',unitCost:45.00,unit:'Pieces',totalValue:4500,onHand:100,freeToUse:60,incoming:40,outgoing:0},{id:4,product:'Product 4',unitCost:12.25,unit:'Pieces',totalValue:1225,onHand:100,freeToUse:100,incoming:0,outgoing:0}];}},// Get stock item by ID\ngetStockItem:async id=>{const response=await api.get(\"/stock/\".concat(id));return response.data;},// Create new stock item\ncreateStockItem:async stockData=>{const response=await api.post('/stock',stockData);return response.data;},// Update stock item\nupdateStockItem:async(id,stockData)=>{const response=await api.put(\"/stock/\".concat(id),stockData);return response.data;},// Get bills of materials\ngetBillsOfMaterials:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/bills-of-materials',{params:filters});return response.data;},// Get bill of materials by ID\ngetBillOfMaterials:async id=>{const response=await api.get(\"/bills-of-materials/\".concat(id));return response.data;},// Create bill of materials\ncreateBillOfMaterials:async bomData=>{const response=await api.post('/bills-of-materials',bomData);return response.data;},// Update bill of materials\nupdateBillOfMaterials:async(id,bomData)=>{const response=await api.put(\"/bills-of-materials/\".concat(id),bomData);return response.data;},// Get work centers\ngetWorkCenters:async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/work-centers',{params:filters});return response.data;},// Get work center by ID\ngetWorkCenter:async id=>{const response=await api.get(\"/work-centers/\".concat(id));return response.data;},// Create work center\ncreateWorkCenter:async workCenterData=>{const response=await api.post('/work-centers',workCenterData);return response.data;},// Update work center\nupdateWorkCenter:async(id,workCenterData)=>{const response=await api.put(\"/work-centers/\".concat(id),workCenterData);return response.data;}};","map":{"version":3,"names":["api","stockAPI","getStockItems","filters","arguments","length","undefined","response","get","params","data","error","id","product","unitCost","unit","totalValue","onHand","freeToUse","incoming","outgoing","getStockItem","concat","createStockItem","stockData","post","updateStockItem","put","getBillsOfMaterials","getBillOfMaterials","createBillOfMaterials","bomData","updateBillOfMaterials","getWorkCenters","getWorkCenter","createWorkCenter","workCenterData","updateWorkCenter"],"sources":["d:/OD/odooxnmit/frontend/src/services/stockAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const stockAPI = {\r\n  // Get all stock items\r\n  getStockItems: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/stock', { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      return [\r\n        { id: 1, product: 'Product 1', unitCost: 25.50, unit: 'Pieces', totalValue: 2550, onHand: 100, freeToUse: 80, incoming: 20, outgoing: 0 },\r\n        { id: 2, product: 'Product 2', unitCost: 15.75, unit: 'Pieces', totalValue: 1575, onHand: 100, freeToUse: 100, incoming: 0, outgoing: 0 },\r\n        { id: 3, product: 'Product 3', unitCost: 45.00, unit: 'Pieces', totalValue: 4500, onHand: 100, freeToUse: 60, incoming: 40, outgoing: 0 },\r\n        { id: 4, product: 'Product 4', unitCost: 12.25, unit: 'Pieces', totalValue: 1225, onHand: 100, freeToUse: 100, incoming: 0, outgoing: 0 }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Get stock item by ID\r\n  getStockItem: async (id) => {\r\n    const response = await api.get(`/stock/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new stock item\r\n  createStockItem: async (stockData) => {\r\n    const response = await api.post('/stock', stockData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update stock item\r\n  updateStockItem: async (id, stockData) => {\r\n    const response = await api.put(`/stock/${id}`, stockData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get bills of materials\r\n  getBillsOfMaterials: async (filters = {}) => {\r\n    const response = await api.get('/bills-of-materials', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get bill of materials by ID\r\n  getBillOfMaterials: async (id) => {\r\n    const response = await api.get(`/bills-of-materials/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create bill of materials\r\n  createBillOfMaterials: async (bomData) => {\r\n    const response = await api.post('/bills-of-materials', bomData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update bill of materials\r\n  updateBillOfMaterials: async (id, bomData) => {\r\n    const response = await api.put(`/bills-of-materials/${id}`, bomData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get work centers\r\n  getWorkCenters: async (filters = {}) => {\r\n    const response = await api.get('/work-centers', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get work center by ID\r\n  getWorkCenter: async (id) => {\r\n    const response = await api.get(`/work-centers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create work center\r\n  createWorkCenter: async (workCenterData) => {\r\n    const response = await api.post('/work-centers', workCenterData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update work center\r\n  updateWorkCenter: async (id, workCenterData) => {\r\n    const response = await api.put(`/work-centers/${id}`, workCenterData);\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}