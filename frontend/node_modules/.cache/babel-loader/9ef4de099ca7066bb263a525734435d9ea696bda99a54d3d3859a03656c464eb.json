{"ast":null,"code":"var _jsxFileName = \"D:\\\\OD\\\\odooxnmit\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Clear any existing user data to force users to sign up first\n    localStorage.removeItem('user');\n    setLoading(false);\n  }, []);\n  const login = async (userId, password) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // For demo purposes, accept any non-empty credentials\n    if (userId && password) {\n      const userData = {\n        id: userId,\n        name: `User ${userId}`,\n        role: 'Manager',\n        loginTime: new Date().toISOString()\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        error: 'Please enter both User ID and Password'\n      };\n    }\n  };\n  const signup = async userData => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // For demo purposes, accept any valid signup data\n    if (userData.userId && userData.password && userData.name && userData.email) {\n      const newUser = {\n        id: userData.userId,\n        name: userData.name,\n        email: userData.email,\n        role: userData.role || 'User',\n        loginTime: new Date().toISOString()\n      };\n      setUser(newUser);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        error: 'Please fill in all required fields'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","localStorage","removeItem","login","userId","password","Promise","resolve","setTimeout","userData","id","name","role","loginTime","Date","toISOString","setItem","JSON","stringify","success","error","signup","email","newUser","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OD/odooxnmit/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Clear any existing user data to force users to sign up first\r\n    localStorage.removeItem('user');\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (userId, password) => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // For demo purposes, accept any non-empty credentials\r\n    if (userId && password) {\r\n      const userData = {\r\n        id: userId,\r\n        name: `User ${userId}`,\r\n        role: 'Manager',\r\n        loginTime: new Date().toISOString()\r\n      };\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, error: 'Please enter both User ID and Password' };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // For demo purposes, accept any valid signup data\r\n    if (userData.userId && userData.password && userData.name && userData.email) {\r\n      const newUser = {\r\n        id: userData.userId,\r\n        name: userData.name,\r\n        email: userData.email,\r\n        role: userData.role || 'User',\r\n        loginTime: new Date().toISOString()\r\n      };\r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, error: 'Please fill in all required fields' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAe,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;IACxC;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IAEtD;IACA,IAAIH,MAAM,IAAIC,QAAQ,EAAE;MACtB,MAAMI,QAAQ,GAAG;QACfC,EAAE,EAAEN,MAAM;QACVO,IAAI,EAAE,QAAQP,MAAM,EAAE;QACtBQ,IAAI,EAAE,SAAS;QACfC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MACDjB,OAAO,CAACW,QAAQ,CAAC;MACjBR,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAAC,CAAC;MACtD,OAAO;QAAEU,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAyC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAOZ,QAAQ,IAAK;IACjC;IACA,MAAM,IAAIH,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IAEtD;IACA,IAAIE,QAAQ,CAACL,MAAM,IAAIK,QAAQ,CAACJ,QAAQ,IAAII,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACa,KAAK,EAAE;MAC3E,MAAMC,OAAO,GAAG;QACdb,EAAE,EAAED,QAAQ,CAACL,MAAM;QACnBO,IAAI,EAAEF,QAAQ,CAACE,IAAI;QACnBW,KAAK,EAAEb,QAAQ,CAACa,KAAK;QACrBV,IAAI,EAAEH,QAAQ,CAACG,IAAI,IAAI,MAAM;QAC7BC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MACDjB,OAAO,CAACyB,OAAO,CAAC;MAChBtB,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACK,OAAO,CAAC,CAAC;MACrD,OAAO;QAAEJ,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAqC,CAAC;IACxE;EACF,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnB1B,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMuB,KAAK,GAAG;IACZ5B,IAAI;IACJM,KAAK;IACLkB,MAAM;IACNG,MAAM;IACNzB;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACqC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9B,QAAA,EAChCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClC,GAAA,CArEWF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}