{"ast":null,"code":"import api from './api';\nexport const stockAPI = {\n  // Get all stock items\n  getStockItems: async (filters = {}) => {\n    try {\n      const response = await api.get('/stock', {\n        params: filters\n      });\n      return response.data || [];\n    } catch (error) {\n      console.error('Error fetching stock items:', error);\n      return [{\n        id: 1,\n        itemName: 'Product 1',\n        quantity: 100,\n        location: 'Warehouse A'\n      }, {\n        id: 2,\n        itemName: 'Product 2',\n        quantity: 50,\n        location: 'Warehouse B'\n      }, {\n        id: 3,\n        itemName: 'Product 3',\n        quantity: 75,\n        location: 'Warehouse A'\n      }, {\n        id: 4,\n        itemName: 'Product 4',\n        quantity: 200,\n        location: 'Warehouse C'\n      }];\n    }\n  },\n  // Get stock item by ID\n  getStockItem: async id => {\n    try {\n      const response = await api.get(`/stock/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching stock item:', error);\n      throw error;\n    }\n  },\n  // Create new stock item\n  createStockItem: async stockData => {\n    try {\n      const response = await api.post('/stock', stockData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating stock item:', error);\n      throw error;\n    }\n  },\n  // Update stock item\n  updateStockItem: async (id, stockData) => {\n    try {\n      const response = await api.put(`/stock/${id}`, stockData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating stock item:', error);\n      throw error;\n    }\n  },\n  // Delete stock item\n  deleteStockItem: async id => {\n    try {\n      const response = await api.delete(`/stock/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting stock item:', error);\n      throw error;\n    }\n  },\n  // Get bills of materials\n  getBillsOfMaterials: async (filters = {}) => {\n    try {\n      const response = await api.get('/bom', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching bills of materials:', error);\n      return [];\n    }\n  },\n  // Get bill of materials by ID\n  getBillOfMaterials: async id => {\n    try {\n      const response = await api.get(`/bom/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching bill of materials:', error);\n      throw error;\n    }\n  },\n  // Create bill of materials\n  createBillOfMaterials: async bomData => {\n    try {\n      const response = await api.post('/bom', bomData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating bill of materials:', error);\n      throw error;\n    }\n  },\n  // Update bill of materials\n  updateBillOfMaterials: async (id, bomData) => {\n    try {\n      const response = await api.put(`/bom/${id}`, bomData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating bill of materials:', error);\n      throw error;\n    }\n  },\n  // Delete bill of materials\n  deleteBillOfMaterials: async id => {\n    try {\n      const response = await api.delete(`/bom/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting bill of materials:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["api","stockAPI","getStockItems","filters","response","get","params","data","error","console","id","itemName","quantity","location","getStockItem","createStockItem","stockData","post","updateStockItem","put","deleteStockItem","delete","getBillsOfMaterials","getBillOfMaterials","createBillOfMaterials","bomData","updateBillOfMaterials","deleteBillOfMaterials"],"sources":["C:/Users/Sahana Madival/OneDrive/Desktop/odooxnmit/frontend/src/services/stockAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const stockAPI = {\r\n  // Get all stock items\r\n  getStockItems: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/stock', { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      console.error('Error fetching stock items:', error);\r\n      return [\r\n        { id: 1, itemName: 'Product 1', quantity: 100, location: 'Warehouse A' },\r\n        { id: 2, itemName: 'Product 2', quantity: 50, location: 'Warehouse B' },\r\n        { id: 3, itemName: 'Product 3', quantity: 75, location: 'Warehouse A' },\r\n        { id: 4, itemName: 'Product 4', quantity: 200, location: 'Warehouse C' }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Get stock item by ID\r\n  getStockItem: async (id) => {\r\n    try {\r\n      const response = await api.get(`/stock/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching stock item:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create new stock item\r\n  createStockItem: async (stockData) => {\r\n    try {\r\n      const response = await api.post('/stock', stockData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating stock item:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update stock item\r\n  updateStockItem: async (id, stockData) => {\r\n    try {\r\n      const response = await api.put(`/stock/${id}`, stockData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating stock item:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete stock item\r\n  deleteStockItem: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/stock/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deleting stock item:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get bills of materials\r\n  getBillsOfMaterials: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/bom', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching bills of materials:', error);\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Get bill of materials by ID\r\n  getBillOfMaterials: async (id) => {\r\n    try {\r\n      const response = await api.get(`/bom/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching bill of materials:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create bill of materials\r\n  createBillOfMaterials: async (bomData) => {\r\n    try {\r\n      const response = await api.post('/bom', bomData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating bill of materials:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update bill of materials\r\n  updateBillOfMaterials: async (id, bomData) => {\r\n    try {\r\n      const response = await api.put(`/bom/${id}`, bomData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating bill of materials:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete bill of materials\r\n  deleteBillOfMaterials: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/bom/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deleting bill of materials:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}