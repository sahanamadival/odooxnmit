{"ast":null,"code":"import api from './api';\nexport const workOrderAPI = {\n  // Get all work orders\n  getWorkOrders: async (filters = {}) => {\n    try {\n      const response = await api.get('/work-orders', {\n        params: filters\n      });\n      return response.data || [];\n    } catch (error) {\n      return [{\n        id: 1,\n        operation: 'Work Order 1',\n        workCenter: 'Work Center 1',\n        finishedProduct: 'Product 1',\n        expectedDuration: 180,\n        realDuration: 0,\n        status: 'In Time'\n      }, {\n        id: 2,\n        operation: 'Work Order 2',\n        workCenter: 'Work Center 2',\n        finishedProduct: 'Product 2',\n        expectedDuration: 120,\n        realDuration: 0,\n        status: 'In Time'\n      }, {\n        id: 3,\n        operation: 'Work Order 3',\n        workCenter: 'Work Center 3',\n        finishedProduct: 'Product 3',\n        expectedDuration: 240,\n        realDuration: 180,\n        status: 'In Time'\n      }, {\n        id: 4,\n        operation: 'Work Order 4',\n        workCenter: 'Work Center 1',\n        finishedProduct: 'Product 4',\n        expectedDuration: 200,\n        realDuration: 220,\n        status: 'Delayed'\n      }];\n    }\n  },\n  // Get work order by ID\n  getWorkOrder: async id => {\n    const response = await api.get(`/work-orders/${id}`);\n    return response.data;\n  },\n  // Create new work order\n  createWorkOrder: async workOrderData => {\n    const response = await api.post('/work-orders', workOrderData);\n    return response.data;\n  },\n  // Update work order\n  updateWorkOrder: async (id, workOrderData) => {\n    const response = await api.put(`/work-orders/${id}`, workOrderData);\n    return response.data;\n  },\n  // Start work order\n  startWorkOrder: async id => {\n    const response = await api.post(`/work-orders/${id}/start`);\n    return response.data;\n  },\n  // Complete work order\n  completeWorkOrder: async id => {\n    const response = await api.post(`/work-orders/${id}/complete`);\n    return response.data;\n  },\n  // Get work order analysis\n  getWorkOrderAnalysis: async (filters = {}) => {\n    const response = await api.get('/work-orders/analysis', {\n      params: filters\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","workOrderAPI","getWorkOrders","filters","response","get","params","data","error","id","operation","workCenter","finishedProduct","expectedDuration","realDuration","status","getWorkOrder","createWorkOrder","workOrderData","post","updateWorkOrder","put","startWorkOrder","completeWorkOrder","getWorkOrderAnalysis"],"sources":["D:/My_Projects/odoo/frontend/src/services/workOrderAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const workOrderAPI = {\r\n  // Get all work orders\r\n  getWorkOrders: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/work-orders', { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      return [\r\n        { id: 1, operation: 'Work Order 1', workCenter: 'Work Center 1', finishedProduct: 'Product 1', expectedDuration: 180, realDuration: 0, status: 'In Time' },\r\n        { id: 2, operation: 'Work Order 2', workCenter: 'Work Center 2', finishedProduct: 'Product 2', expectedDuration: 120, realDuration: 0, status: 'In Time' },\r\n        { id: 3, operation: 'Work Order 3', workCenter: 'Work Center 3', finishedProduct: 'Product 3', expectedDuration: 240, realDuration: 180, status: 'In Time' },\r\n        { id: 4, operation: 'Work Order 4', workCenter: 'Work Center 1', finishedProduct: 'Product 4', expectedDuration: 200, realDuration: 220, status: 'Delayed' }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Get work order by ID\r\n  getWorkOrder: async (id) => {\r\n    const response = await api.get(`/work-orders/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new work order\r\n  createWorkOrder: async (workOrderData) => {\r\n    const response = await api.post('/work-orders', workOrderData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update work order\r\n  updateWorkOrder: async (id, workOrderData) => {\r\n    const response = await api.put(`/work-orders/${id}`, workOrderData);\r\n    return response.data;\r\n  },\r\n\r\n  // Start work order\r\n  startWorkOrder: async (id) => {\r\n    const response = await api.post(`/work-orders/${id}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  // Complete work order\r\n  completeWorkOrder: async (id) => {\r\n    const response = await api.post(`/work-orders/${id}/complete`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get work order analysis\r\n  getWorkOrderAnalysis: async (filters = {}) => {\r\n    const response = await api.get('/work-orders/analysis', { params: filters });\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,aAAa,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,cAAc,EAAE;QAAEC,MAAM,EAAEH;MAAQ,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACG,IAAI,IAAI,EAAE;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE,cAAc;QAAEC,UAAU,EAAE,eAAe;QAAEC,eAAe,EAAE,WAAW;QAAEC,gBAAgB,EAAE,GAAG;QAAEC,YAAY,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAU,CAAC,EAC1J;QAAEN,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE,cAAc;QAAEC,UAAU,EAAE,eAAe;QAAEC,eAAe,EAAE,WAAW;QAAEC,gBAAgB,EAAE,GAAG;QAAEC,YAAY,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAU,CAAC,EAC1J;QAAEN,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE,cAAc;QAAEC,UAAU,EAAE,eAAe;QAAEC,eAAe,EAAE,WAAW;QAAEC,gBAAgB,EAAE,GAAG;QAAEC,YAAY,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAU,CAAC,EAC5J;QAAEN,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE,cAAc;QAAEC,UAAU,EAAE,eAAe;QAAEC,eAAe,EAAE,WAAW;QAAEC,gBAAgB,EAAE,GAAG;QAAEC,YAAY,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAU,CAAC,CAC7J;IACH;EACF,CAAC;EAED;EACAC,YAAY,EAAE,MAAOP,EAAE,IAAK;IAC1B,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,gBAAgBI,EAAE,EAAE,CAAC;IACpD,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAU,eAAe,EAAE,MAAOC,aAAa,IAAK;IACxC,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,IAAI,CAAC,cAAc,EAAED,aAAa,CAAC;IAC9D,OAAOd,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAa,eAAe,EAAE,MAAAA,CAAOX,EAAE,EAAES,aAAa,KAAK;IAC5C,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACqB,GAAG,CAAC,gBAAgBZ,EAAE,EAAE,EAAES,aAAa,CAAC;IACnE,OAAOd,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAe,cAAc,EAAE,MAAOb,EAAE,IAAK;IAC5B,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,IAAI,CAAC,gBAAgBV,EAAE,QAAQ,CAAC;IAC3D,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAgB,iBAAiB,EAAE,MAAOd,EAAE,IAAK;IAC/B,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,IAAI,CAAC,gBAAgBV,EAAE,WAAW,CAAC;IAC9D,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC;EAED;EACAiB,oBAAoB,EAAE,MAAAA,CAAOrB,OAAO,GAAG,CAAC,CAAC,KAAK;IAC5C,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,uBAAuB,EAAE;MAAEC,MAAM,EAAEH;IAAQ,CAAC,CAAC;IAC5E,OAAOC,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}