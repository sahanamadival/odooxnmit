{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nexport const useVoiceCommand = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [isSupported, setIsSupported] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if browser supports speech recognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    setIsSupported(!!SpeechRecognition);\n  }, []);\n  const startListening = useCallback(() => {\n    if (!isSupported) {\n      setError('Speech recognition is not supported in this browser');\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n      setError(null);\n    };\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n      setTranscript(finalTranscript || interimTranscript);\n    };\n    recognition.onerror = event => {\n      setError(`Speech recognition error: ${event.error}`);\n      setIsListening(false);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.start();\n  }, [isSupported]);\n  const stopListening = useCallback(() => {\n    setIsListening(false);\n    setTranscript('');\n  }, []);\n  const clearTranscript = useCallback(() => {\n    setTranscript('');\n  }, []);\n\n  // Voice command processing\n  const processVoiceCommand = useCallback(command => {\n    const lowerCommand = command.toLowerCase().trim();\n\n    // Navigation commands\n    if (lowerCommand.includes('go to') || lowerCommand.includes('navigate to')) {\n      if (lowerCommand.includes('dashboard')) return {\n        type: 'navigate',\n        path: '/dashboard'\n      };\n      if (lowerCommand.includes('manufacturing') || lowerCommand.includes('manufacturing orders')) return {\n        type: 'navigate',\n        path: '/manufacturing-orders'\n      };\n      if (lowerCommand.includes('work orders')) return {\n        type: 'navigate',\n        path: '/work-orders'\n      };\n      if (lowerCommand.includes('stock') || lowerCommand.includes('stock ledger')) return {\n        type: 'navigate',\n        path: '/stock-ledger'\n      };\n      if (lowerCommand.includes('reports')) return {\n        type: 'navigate',\n        path: '/reports'\n      };\n    }\n\n    // Action commands\n    if (lowerCommand.includes('create') || lowerCommand.includes('new')) {\n      if (lowerCommand.includes('manufacturing order')) return {\n        type: 'action',\n        action: 'createManufacturingOrder'\n      };\n      if (lowerCommand.includes('work order')) return {\n        type: 'action',\n        action: 'createWorkOrder'\n      };\n      if (lowerCommand.includes('stock item')) return {\n        type: 'action',\n        action: 'createStockItem'\n      };\n    }\n    if (lowerCommand.includes('start')) {\n      if (lowerCommand.includes('manufacturing order')) return {\n        type: 'action',\n        action: 'startManufacturingOrder'\n      };\n      if (lowerCommand.includes('work order')) return {\n        type: 'action',\n        action: 'startWorkOrder'\n      };\n    }\n    if (lowerCommand.includes('confirm')) {\n      return {\n        type: 'action',\n        action: 'confirmOrder'\n      };\n    }\n    if (lowerCommand.includes('cancel')) {\n      return {\n        type: 'action',\n        action: 'cancelOrder'\n      };\n    }\n\n    // Search commands\n    if (lowerCommand.includes('search') || lowerCommand.includes('find')) {\n      const searchTerm = lowerCommand.replace(/search|find|for/gi, '').trim();\n      return {\n        type: 'search',\n        term: searchTerm\n      };\n    }\n\n    // Help command\n    if (lowerCommand.includes('help') || lowerCommand.includes('what can you do')) {\n      return {\n        type: 'help'\n      };\n    }\n    return {\n      type: 'unknown',\n      command: lowerCommand\n    };\n  }, []);\n  return {\n    isListening,\n    isSupported,\n    transcript,\n    error,\n    startListening,\n    stopListening,\n    clearTranscript,\n    processVoiceCommand\n  };\n};\n_s(useVoiceCommand, \"/HYqSkl8PAEfY7FM5wbdS2FMGow=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useVoiceCommand","_s","isListening","setIsListening","isSupported","setIsSupported","transcript","setTranscript","error","setError","SpeechRecognition","window","webkitSpeechRecognition","startListening","recognition","continuous","interimResults","lang","onstart","onresult","event","finalTranscript","interimTranscript","i","resultIndex","results","length","isFinal","onerror","onend","start","stopListening","clearTranscript","processVoiceCommand","command","lowerCommand","toLowerCase","trim","includes","type","path","action","searchTerm","replace","term"],"sources":["D:/OD/odooxnmit/frontend/src/hooks/useVoiceCommand.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useVoiceCommand = () => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSupported, setIsSupported] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if browser supports speech recognition\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    setIsSupported(!!SpeechRecognition);\r\n  }, []);\r\n\r\n  const startListening = useCallback(() => {\r\n    if (!isSupported) {\r\n      setError('Speech recognition is not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onstart = () => {\r\n      setIsListening(true);\r\n      setError(null);\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      let finalTranscript = '';\r\n      let interimTranscript = '';\r\n\r\n      for (let i = event.resultIndex; i < event.results.length; i++) {\r\n        const transcript = event.results[i][0].transcript;\r\n        if (event.results[i].isFinal) {\r\n          finalTranscript += transcript;\r\n        } else {\r\n          interimTranscript += transcript;\r\n        }\r\n      }\r\n\r\n      setTranscript(finalTranscript || interimTranscript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      setError(`Speech recognition error: ${event.error}`);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.start();\r\n  }, [isSupported]);\r\n\r\n  const stopListening = useCallback(() => {\r\n    setIsListening(false);\r\n    setTranscript('');\r\n  }, []);\r\n\r\n  const clearTranscript = useCallback(() => {\r\n    setTranscript('');\r\n  }, []);\r\n\r\n  // Voice command processing\r\n  const processVoiceCommand = useCallback((command) => {\r\n    const lowerCommand = command.toLowerCase().trim();\r\n    \r\n    // Navigation commands\r\n    if (lowerCommand.includes('go to') || lowerCommand.includes('navigate to')) {\r\n      if (lowerCommand.includes('dashboard')) return { type: 'navigate', path: '/dashboard' };\r\n      if (lowerCommand.includes('manufacturing') || lowerCommand.includes('manufacturing orders')) return { type: 'navigate', path: '/manufacturing-orders' };\r\n      if (lowerCommand.includes('work orders')) return { type: 'navigate', path: '/work-orders' };\r\n      if (lowerCommand.includes('stock') || lowerCommand.includes('stock ledger')) return { type: 'navigate', path: '/stock-ledger' };\r\n      if (lowerCommand.includes('reports')) return { type: 'navigate', path: '/reports' };\r\n    }\r\n\r\n    // Action commands\r\n    if (lowerCommand.includes('create') || lowerCommand.includes('new')) {\r\n      if (lowerCommand.includes('manufacturing order')) return { type: 'action', action: 'createManufacturingOrder' };\r\n      if (lowerCommand.includes('work order')) return { type: 'action', action: 'createWorkOrder' };\r\n      if (lowerCommand.includes('stock item')) return { type: 'action', action: 'createStockItem' };\r\n    }\r\n\r\n    if (lowerCommand.includes('start')) {\r\n      if (lowerCommand.includes('manufacturing order')) return { type: 'action', action: 'startManufacturingOrder' };\r\n      if (lowerCommand.includes('work order')) return { type: 'action', action: 'startWorkOrder' };\r\n    }\r\n\r\n    if (lowerCommand.includes('confirm')) {\r\n      return { type: 'action', action: 'confirmOrder' };\r\n    }\r\n\r\n    if (lowerCommand.includes('cancel')) {\r\n      return { type: 'action', action: 'cancelOrder' };\r\n    }\r\n\r\n    // Search commands\r\n    if (lowerCommand.includes('search') || lowerCommand.includes('find')) {\r\n      const searchTerm = lowerCommand.replace(/search|find|for/gi, '').trim();\r\n      return { type: 'search', term: searchTerm };\r\n    }\r\n\r\n    // Help command\r\n    if (lowerCommand.includes('help') || lowerCommand.includes('what can you do')) {\r\n      return { type: 'help' };\r\n    }\r\n\r\n    return { type: 'unknown', command: lowerCommand };\r\n  }, []);\r\n\r\n  return {\r\n    isListening,\r\n    isSupported,\r\n    transcript,\r\n    error,\r\n    startListening,\r\n    stopListening,\r\n    clearTranscript,\r\n    processVoiceCommand\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}