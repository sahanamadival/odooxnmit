{"ast":null,"code":"// Mock API service - No actual HTTP calls needed\n// This simulates API responses with mock data\n\nconst simulateApiCall = (data, delay = 500) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        data\n      });\n    }, delay);\n  });\n};\n\n// Mock API object to simulate HTTP methods\nconst api = {\n  get: (url, config) => {\n    // Simulate API call failure to test fallback\n    return Promise.reject(new Error('API not implemented'));\n  },\n  post: (url, data) => {\n    // Simulate successful creation\n    return simulateApiCall({\n      id: Date.now(),\n      ...data\n    });\n  },\n  put: (url, data) => {\n    // Simulate successful update\n    return simulateApiCall({\n      ...data\n    });\n  },\n  delete: url => {\n    // Simulate successful deletion\n    return simulateApiCall({\n      success: true\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["simulateApiCall","data","delay","Promise","resolve","setTimeout","api","get","url","config","reject","Error","post","id","Date","now","put","delete","success"],"sources":["D:/OD/odooxnmit/frontend/src/services/api.js"],"sourcesContent":["// Mock API service - No actual HTTP calls needed\r\n// This simulates API responses with mock data\r\n\r\nconst simulateApiCall = (data, delay = 500) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({ data });\r\n    }, delay);\r\n  });\r\n};\r\n\r\n// Mock API object to simulate HTTP methods\r\nconst api = {\r\n  get: (url, config) => {\r\n    // Simulate API call failure to test fallback\r\n    return Promise.reject(new Error('API not implemented'));\r\n  },\r\n  post: (url, data) => {\r\n    // Simulate successful creation\r\n    return simulateApiCall({ id: Date.now(), ...data });\r\n  },\r\n  put: (url, data) => {\r\n    // Simulate successful update\r\n    return simulateApiCall({ ...data });\r\n  },\r\n  delete: (url) => {\r\n    // Simulate successful deletion\r\n    return simulateApiCall({ success: true });\r\n  }\r\n};\r\n\r\nexport default api;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,eAAe,GAAGA,CAACC,IAAI,EAAEC,KAAK,GAAG,GAAG,KAAK;EAC7C,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACfD,OAAO,CAAC;QAAEH;MAAK,CAAC,CAAC;IACnB,CAAC,EAAEC,KAAK,CAAC;EACX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMI,GAAG,GAAG;EACVC,GAAG,EAAEA,CAACC,GAAG,EAAEC,MAAM,KAAK;IACpB;IACA,OAAON,OAAO,CAACO,MAAM,CAAC,IAAIC,KAAK,CAAC,qBAAqB,CAAC,CAAC;EACzD,CAAC;EACDC,IAAI,EAAEA,CAACJ,GAAG,EAAEP,IAAI,KAAK;IACnB;IACA,OAAOD,eAAe,CAAC;MAAEa,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE,GAAGd;IAAK,CAAC,CAAC;EACrD,CAAC;EACDe,GAAG,EAAEA,CAACR,GAAG,EAAEP,IAAI,KAAK;IAClB;IACA,OAAOD,eAAe,CAAC;MAAE,GAAGC;IAAK,CAAC,CAAC;EACrC,CAAC;EACDgB,MAAM,EAAGT,GAAG,IAAK;IACf;IACA,OAAOR,eAAe,CAAC;MAAEkB,OAAO,EAAE;IAAK,CAAC,CAAC;EAC3C;AACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}