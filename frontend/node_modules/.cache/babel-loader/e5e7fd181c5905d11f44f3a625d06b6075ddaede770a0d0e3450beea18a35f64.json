{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sahana Madival\\\\OneDrive\\\\Desktop\\\\odooxnmit\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing token and user data\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      try {\n        setUser(JSON.parse(userData));\n      } catch (error) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Login with email + password\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store token and user\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please check your credentials.'\n      };\n    }\n  };\n\n  // Sign up with username, email, password, role\n  const signup = async userData => {\n    try {\n      const payload = {\n        username: userData.userId,\n        // map frontend userId to backend username\n        email: userData.email,\n        password: userData.password,\n        role: userData.role || 'User'\n      };\n      await api.post('/auth/register', payload);\n\n      // Auto-login after successful registration\n      return await login(userData.email, userData.password);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Signup error:', error);\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    login,\n    signup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","error","removeItem","login","email","password","response","post","data","setItem","stringify","success","_error$response","_error$response$data","console","signup","payload","username","userId","role","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sahana Madival/OneDrive/Desktop/odooxnmit/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for existing token and user data\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      try {\r\n        setUser(JSON.parse(userData));\r\n      } catch (error) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login with email + password\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Store token and user\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n      setUser(userData);\r\n\r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Login failed. Please check your credentials.'\r\n      };\r\n    }\r\n  };\r\n\r\n  // Sign up with username, email, password, role\r\n  const signup = async (userData) => {\r\n    try {\r\n      const payload = {\r\n        username: userData.userId, // map frontend userId to backend username\r\n        email: userData.email,\r\n        password: userData.password,\r\n        role: userData.role || 'User'\r\n      };\r\n\r\n      await api.post('/auth/register', payload);\r\n\r\n      // Auto-login after successful registration\r\n      return await login(userData.email, userData.password);\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Registration failed. Please try again.'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrB,IAAI;QACFN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;QAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;IACAR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnE,MAAM;QAAEV,KAAK;QAAEJ,IAAI,EAAEO;MAAS,CAAC,GAAGQ,QAAQ,CAACE,IAAI;;MAE/C;MACAZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;MACpCC,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACZ,QAAQ,CAAC,CAAC;MAEtDN,OAAO,CAACM,QAAQ,CAAC;MAEjB,OAAO;QAAEa,OAAO,EAAE,IAAI;QAAEpB,IAAI,EAAEO;MAAS,CAAC;IAC1C,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAW,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACb,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QACLU,OAAO,EAAE,KAAK;QACdV,KAAK,EAAE,EAAAW,eAAA,GAAAX,KAAK,CAACK,QAAQ,cAAAM,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBZ,KAAK,KAAI;MACxC,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMc,MAAM,GAAG,MAAOjB,QAAQ,IAAK;IACjC,IAAI;MACF,MAAMkB,OAAO,GAAG;QACdC,QAAQ,EAAEnB,QAAQ,CAACoB,MAAM;QAAE;QAC3Bd,KAAK,EAAEN,QAAQ,CAACM,KAAK;QACrBC,QAAQ,EAAEP,QAAQ,CAACO,QAAQ;QAC3Bc,IAAI,EAAErB,QAAQ,CAACqB,IAAI,IAAI;MACzB,CAAC;MAED,MAAMvC,GAAG,CAAC2B,IAAI,CAAC,gBAAgB,EAAES,OAAO,CAAC;;MAEzC;MACA,OAAO,MAAMb,KAAK,CAACL,QAAQ,CAACM,KAAK,EAAEN,QAAQ,CAACO,QAAQ,CAAC;IACvD,CAAC,CAAC,OAAOJ,KAAK,EAAE;MAAA,IAAAmB,gBAAA,EAAAC,qBAAA;MACdP,OAAO,CAACb,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QACLU,OAAO,EAAE,KAAK;QACdV,KAAK,EAAE,EAAAmB,gBAAA,GAAAnB,KAAK,CAACK,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBpB,KAAK,KAAI;MACxC,CAAC;IACH;EACF,CAAC;EAED,MAAMqB,MAAM,GAAGA,CAAA,KAAM;IACnB9B,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMqB,KAAK,GAAG;IACZhC,IAAI;IACJY,KAAK;IACLY,MAAM;IACNO,MAAM;IACN7B;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACyC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlC,QAAA,EAChCA;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtC,GAAA,CApFWF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}