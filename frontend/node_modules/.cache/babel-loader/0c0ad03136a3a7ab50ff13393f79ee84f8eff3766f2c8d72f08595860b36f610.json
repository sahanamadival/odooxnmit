{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if user is logged in on app start\nconst savedUser=localStorage.getItem('user');if(savedUser){try{setUser(JSON.parse(savedUser));}catch(error){console.error('Error parsing saved user:',error);localStorage.removeItem('user');}}setLoading(false);},[]);const login=async(userId,password)=>{// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,500));// For demo purposes, accept any non-empty credentials\nif(userId&&password){const userData={id:userId,name:\"User \".concat(userId),role:'Manager',loginTime:new Date().toISOString()};setUser(userData);localStorage.setItem('user',JSON.stringify(userData));return{success:true};}else{return{success:false,error:'Please enter both User ID and Password'};}};const signup=async userData=>{// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,500));// For demo purposes, accept any valid signup data\nif(userData.userId&&userData.password&&userData.name&&userData.email){const newUser={id:userData.userId,name:userData.name,email:userData.email,role:userData.role||'User',loginTime:new Date().toISOString()};setUser(newUser);localStorage.setItem('user',JSON.stringify(newUser));return{success:true};}else{return{success:false,error:'Please fill in all required fields'};}};const logout=()=>{setUser(null);localStorage.removeItem('user');};const value={user,login,signup,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","error","console","removeItem","login","userId","password","Promise","resolve","setTimeout","userData","id","name","concat","role","loginTime","Date","toISOString","setItem","stringify","success","signup","email","newUser","logout","value","Provider"],"sources":["d:/OD/odooxnmit/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing saved user:', error);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (userId, password) => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // For demo purposes, accept any non-empty credentials\r\n    if (userId && password) {\r\n      const userData = {\r\n        id: userId,\r\n        name: `User ${userId}`,\r\n        role: 'Manager',\r\n        loginTime: new Date().toISOString()\r\n      };\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, error: 'Please enter both User ID and Password' };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // For demo purposes, accept any valid signup data\r\n    if (userData.userId && userData.password && userData.name && userData.email) {\r\n      const newUser = {\r\n        id: userData.userId,\r\n        name: userData.name,\r\n        email: userData.email,\r\n        role: userData.role || 'User',\r\n        loginTime: new Date().toISOString()\r\n      };\r\n      setUser(newUser);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, error: 'Please fill in all required fields' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}