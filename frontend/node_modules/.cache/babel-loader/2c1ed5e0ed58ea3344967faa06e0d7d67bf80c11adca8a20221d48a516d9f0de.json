{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Sahana Madival\\\\OneDrive\\\\Desktop\\\\od2\\\\odooxnmit\\\\frontend\\\\src\\\\context\\\\ManufacturingContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManufacturingContext = /*#__PURE__*/createContext();\nexport const useManufacturing = () => {\n  _s();\n  const context = useContext(ManufacturingContext);\n  if (!context) {\n    throw new Error('useManufacturing must be used within a ManufacturingProvider');\n  }\n  return context;\n};\n\n// Mock data with all possible statuses\n_s(useManufacturing, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst initialManufacturingOrders = [{\n  id: 'MO-001',\n  finishedProduct: 'Widget A',\n  quantity: 100,\n  scheduleDate: '2024-01-15',\n  status: 'Draft',\n  billOfMaterialId: 'BOM-001',\n  priority: 'High',\n  reference: 'REF-001',\n  createdDate: '2024-01-10',\n  estimatedDuration: 240,\n  realDuration: 0,\n  components: [{\n    id: 1,\n    component: 'Steel Frame',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 0\n  }, {\n    id: 2,\n    component: 'Motor',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 0\n  }, {\n    id: 3,\n    component: 'Screws',\n    toConsume: 20,\n    units: 'pcs',\n    consumed: 0\n  }],\n  workOrders: [{\n    id: 1,\n    operation: 'Assembly',\n    workCenter: 'Assembly Line 1',\n    expectedDuration: 120,\n    realDuration: 0,\n    status: 'Pending'\n  }, {\n    id: 2,\n    operation: 'Quality Check',\n    workCenter: 'QC Station',\n    expectedDuration: 30,\n    realDuration: 0,\n    status: 'Pending'\n  }, {\n    id: 3,\n    operation: 'Packaging',\n    workCenter: 'Packaging Line',\n    expectedDuration: 90,\n    realDuration: 0,\n    status: 'Pending'\n  }]\n}, {\n  id: 'MO-002',\n  finishedProduct: 'Widget B',\n  quantity: 50,\n  scheduleDate: '2024-01-20',\n  status: 'Confirmed',\n  billOfMaterialId: 'BOM-002',\n  priority: 'Medium',\n  reference: 'REF-002',\n  createdDate: '2024-01-12',\n  estimatedDuration: 180,\n  realDuration: 0,\n  components: [{\n    id: 1,\n    component: 'Aluminum Frame',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 0\n  }, {\n    id: 2,\n    component: 'Circuit Board',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 0\n  }],\n  workOrders: [{\n    id: 1,\n    operation: 'Welding',\n    workCenter: 'Welding Station',\n    expectedDuration: 90,\n    realDuration: 0,\n    status: 'Pending'\n  }, {\n    id: 2,\n    operation: 'Testing',\n    workCenter: 'Test Lab',\n    expectedDuration: 90,\n    realDuration: 0,\n    status: 'Pending'\n  }]\n}, {\n  id: 'MO-003',\n  finishedProduct: 'Widget C',\n  quantity: 75,\n  scheduleDate: '2024-01-18',\n  status: 'In-Progress',\n  billOfMaterialId: 'BOM-003',\n  priority: 'High',\n  reference: 'REF-003',\n  createdDate: '2024-01-08',\n  estimatedDuration: 300,\n  realDuration: 150,\n  components: [{\n    id: 1,\n    component: 'Plastic Housing',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 1\n  }, {\n    id: 2,\n    component: 'LED Strip',\n    toConsume: 2,\n    units: 'meters',\n    consumed: 1\n  }],\n  workOrders: [{\n    id: 1,\n    operation: 'Molding',\n    workCenter: 'Molding Station',\n    expectedDuration: 180,\n    realDuration: 150,\n    status: 'In-Progress'\n  }, {\n    id: 2,\n    operation: 'Assembly',\n    workCenter: 'Assembly Line 2',\n    expectedDuration: 120,\n    realDuration: 0,\n    status: 'Pending'\n  }]\n}, {\n  id: 'MO-004',\n  finishedProduct: 'Widget D',\n  quantity: 200,\n  scheduleDate: '2024-01-10',\n  status: 'Done',\n  billOfMaterialId: 'BOM-004',\n  priority: 'Low',\n  reference: 'REF-004',\n  createdDate: '2024-01-05',\n  estimatedDuration: 400,\n  realDuration: 380,\n  components: [{\n    id: 1,\n    component: 'Metal Casing',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 1\n  }, {\n    id: 2,\n    component: 'Rubber Gasket',\n    toConsume: 2,\n    units: 'pcs',\n    consumed: 2\n  }],\n  workOrders: [{\n    id: 1,\n    operation: 'Cutting',\n    workCenter: 'CNC Station',\n    expectedDuration: 200,\n    realDuration: 190,\n    status: 'Done'\n  }, {\n    id: 2,\n    operation: 'Finishing',\n    workCenter: 'Finishing Station',\n    expectedDuration: 200,\n    realDuration: 190,\n    status: 'Done'\n  }]\n}, {\n  id: 'MO-005',\n  finishedProduct: 'Widget E',\n  quantity: 30,\n  scheduleDate: '2024-01-25',\n  status: 'Cancelled',\n  billOfMaterialId: 'BOM-005',\n  priority: 'Low',\n  reference: 'REF-005',\n  createdDate: '2024-01-15',\n  estimatedDuration: 150,\n  realDuration: 0,\n  components: [{\n    id: 1,\n    component: 'Glass Panel',\n    toConsume: 1,\n    units: 'pcs',\n    consumed: 0\n  }],\n  workOrders: [{\n    id: 1,\n    operation: 'Polishing',\n    workCenter: 'Polishing Station',\n    expectedDuration: 150,\n    realDuration: 0,\n    status: 'Cancelled'\n  }]\n}];\nconst initialBillsOfMaterials = [{\n  id: 'BOM-001',\n  finishedProduct: 'Widget A',\n  quantity: 1,\n  reference: 'WA-001',\n  components: [{\n    component: 'Steel Frame',\n    toConsume: 1,\n    units: 'pcs'\n  }, {\n    component: 'Motor',\n    toConsume: 1,\n    units: 'pcs'\n  }, {\n    component: 'Screws',\n    toConsume: 20,\n    units: 'pcs'\n  }],\n  workOrders: [{\n    operation: 'Assembly',\n    workCenter: 'Assembly Line 1',\n    duration: '120'\n  }, {\n    operation: 'Quality Check',\n    workCenter: 'QC Station',\n    duration: '30'\n  }, {\n    operation: 'Packaging',\n    workCenter: 'Packaging Line',\n    duration: '90'\n  }]\n}, {\n  id: 'BOM-002',\n  finishedProduct: 'Widget B',\n  quantity: 1,\n  reference: 'WB-001',\n  components: [{\n    component: 'Aluminum Frame',\n    toConsume: 1,\n    units: 'pcs'\n  }, {\n    component: 'Circuit Board',\n    toConsume: 1,\n    units: 'pcs'\n  }],\n  workOrders: [{\n    operation: 'Welding',\n    workCenter: 'Welding Station',\n    duration: '90'\n  }, {\n    operation: 'Testing',\n    workCenter: 'Test Lab',\n    duration: '90'\n  }]\n}, {\n  id: 'BOM-003',\n  finishedProduct: 'Widget C',\n  quantity: 1,\n  reference: 'WC-001',\n  components: [{\n    component: 'Plastic Housing',\n    toConsume: 1,\n    units: 'pcs'\n  }, {\n    component: 'LED Strip',\n    toConsume: 2,\n    units: 'meters'\n  }],\n  workOrders: [{\n    operation: 'Molding',\n    workCenter: 'Molding Station',\n    duration: '180'\n  }, {\n    operation: 'Assembly',\n    workCenter: 'Assembly Line 2',\n    duration: '120'\n  }]\n}, {\n  id: 'BOM-004',\n  finishedProduct: 'Widget D',\n  quantity: 1,\n  reference: 'WD-001',\n  components: [{\n    component: 'Metal Casing',\n    toConsume: 1,\n    units: 'pcs'\n  }, {\n    component: 'Rubber Gasket',\n    toConsume: 2,\n    units: 'pcs'\n  }],\n  workOrders: [{\n    operation: 'Cutting',\n    workCenter: 'CNC Station',\n    duration: '200'\n  }, {\n    operation: 'Finishing',\n    workCenter: 'Finishing Station',\n    duration: '200'\n  }]\n}, {\n  id: 'BOM-005',\n  finishedProduct: 'Widget E',\n  quantity: 1,\n  reference: 'WE-001',\n  components: [{\n    component: 'Glass Panel',\n    toConsume: 1,\n    units: 'pcs'\n  }],\n  workOrders: [{\n    operation: 'Polishing',\n    workCenter: 'Polishing Station',\n    duration: '150'\n  }]\n}];\nconst initialWorkOrders = [{\n  id: 'WO-001',\n  manufacturingOrderId: 'MO-001',\n  operation: 'Assembly',\n  workCenter: 'Assembly Line 1',\n  expectedDuration: 120,\n  realDuration: 0,\n  status: 'Pending',\n  product: 'Widget A',\n  quantity: 100\n}, {\n  id: 'WO-002',\n  manufacturingOrderId: 'MO-001',\n  operation: 'Quality Check',\n  workCenter: 'QC Station',\n  expectedDuration: 30,\n  realDuration: 0,\n  status: 'Pending',\n  product: 'Widget A',\n  quantity: 100\n}, {\n  id: 'WO-003',\n  manufacturingOrderId: 'MO-003',\n  operation: 'Molding',\n  workCenter: 'Molding Station',\n  expectedDuration: 180,\n  realDuration: 150,\n  status: 'In-Progress',\n  product: 'Widget C',\n  quantity: 75\n}, {\n  id: 'WO-004',\n  manufacturingOrderId: 'MO-004',\n  operation: 'Cutting',\n  workCenter: 'CNC Station',\n  expectedDuration: 200,\n  realDuration: 190,\n  status: 'Done',\n  product: 'Widget D',\n  quantity: 200\n}];\nconst initialStockItems = [{\n  id: 'STK-001',\n  product: 'Steel Frame',\n  unitCost: 1200,\n  unit: 'pcs',\n  totalValue: 600000,\n  onHand: 500,\n  freeToUse: 270,\n  incoming: 0,\n  outgoing: 230\n}, {\n  id: 'STK-002',\n  product: 'Motor',\n  unitCost: 500,\n  unit: 'pcs',\n  totalValue: 25000,\n  onHand: 50,\n  freeToUse: 30,\n  incoming: 20,\n  outgoing: 0\n}, {\n  id: 'STK-003',\n  product: 'Aluminum Frame',\n  unitCost: 100,\n  unit: 'pcs',\n  totalValue: 2000,\n  onHand: 20,\n  freeToUse: 20,\n  incoming: 0,\n  outgoing: 0\n}, {\n  id: 'STK-004',\n  product: 'Circuit Board',\n  unitCost: 300,\n  unit: 'pcs',\n  totalValue: 15000,\n  onHand: 50,\n  freeToUse: 40,\n  incoming: 10,\n  outgoing: 0\n}, {\n  id: 'STK-005',\n  product: 'Plastic Housing',\n  unitCost: 150,\n  unit: 'pcs',\n  totalValue: 11250,\n  onHand: 75,\n  freeToUse: 50,\n  incoming: 25,\n  outgoing: 0\n}];\nexport const ManufacturingProvider = ({\n  children\n}) => {\n  _s2();\n  const [manufacturingOrders, setManufacturingOrders] = useState(initialManufacturingOrders);\n  const [billsOfMaterials, setBillsOfMaterials] = useState(initialBillsOfMaterials);\n  const [workOrders, setWorkOrders] = useState(initialWorkOrders);\n  const [stockItems, setStockItems] = useState(initialStockItems);\n\n  // Generate new ID for orders\n  const generateOrderId = useCallback(() => {\n    const maxId = manufacturingOrders.reduce((max, order) => {\n      const num = parseInt(order.id.split('-')[1]);\n      return num > max ? num : max;\n    }, 0);\n    return `MO-${String(maxId + 1).padStart(3, '0')}`;\n  }, [manufacturingOrders]);\n\n  // Generate new ID for BOMs\n  const generateBOMId = useCallback(() => {\n    const maxId = billsOfMaterials.reduce((max, bom) => {\n      const num = parseInt(bom.id.split('-')[1]);\n      return num > max ? num : max;\n    }, 0);\n    return `BOM-${String(maxId + 1).padStart(3, '0')}`;\n  }, [billsOfMaterials]);\n\n  // Update order status\n  const updateOrderStatus = useCallback((orderId, newStatus) => {\n    setManufacturingOrders(prev => prev.map(order => {\n      if (order.id === orderId) {\n        const updatedOrder = {\n          ...order,\n          status: newStatus\n        };\n\n        // Update work orders status when manufacturing order status changes\n        if (newStatus === 'In-Progress') {\n          updatedOrder.workOrders = order.workOrders.map(wo => ({\n            ...wo,\n            status: wo.status === 'Pending' ? 'In-Progress' : wo.status\n          }));\n        } else if (newStatus === 'Done') {\n          updatedOrder.workOrders = order.workOrders.map(wo => ({\n            ...wo,\n            status: 'Done'\n          }));\n        } else if (newStatus === 'Cancelled') {\n          updatedOrder.workOrders = order.workOrders.map(wo => ({\n            ...wo,\n            status: 'Cancelled'\n          }));\n        }\n        return updatedOrder;\n      }\n      return order;\n    }));\n  }, []);\n\n  // Add new order\n  const addOrder = useCallback(newOrderData => {\n    const newOrder = {\n      id: generateOrderId(),\n      ...newOrderData,\n      status: 'Draft',\n      createdDate: new Date().toISOString().split('T')[0],\n      realDuration: 0\n    };\n    setManufacturingOrders(prev => [...prev, newOrder]);\n    return newOrder.id;\n  }, [generateOrderId]);\n\n  // Update order\n  const updateOrder = useCallback((orderId, updatedData) => {\n    setManufacturingOrders(prev => prev.map(order => order.id === orderId ? {\n      ...order,\n      ...updatedData\n    } : order));\n  }, []);\n\n  // Delete order\n  const deleteOrder = useCallback(orderId => {\n    setManufacturingOrders(prev => prev.filter(order => order.id !== orderId));\n  }, []);\n\n  // Add new BOM\n  const addBOM = useCallback(newBOMData => {\n    const newBOM = {\n      id: generateBOMId(),\n      ...newBOMData\n    };\n    setBillsOfMaterials(prev => [...prev, newBOM]);\n    return newBOM.id;\n  }, [generateBOMId]);\n\n  // Update BOM\n  const updateBOM = useCallback((bomId, updatedData) => {\n    setBillsOfMaterials(prev => prev.map(bom => bom.id === bomId ? {\n      ...bom,\n      ...updatedData\n    } : bom));\n  }, []);\n\n  // Delete BOM\n  const deleteBOM = useCallback(bomId => {\n    setBillsOfMaterials(prev => prev.filter(bom => bom.id !== bomId));\n  }, []);\n\n  // Get BOM by ID\n  const getBOMById = useCallback(bomId => {\n    return billsOfMaterials.find(bom => bom.id === bomId);\n  }, [billsOfMaterials]);\n\n  // Get order by ID\n  const getOrderById = useCallback(orderId => {\n    return manufacturingOrders.find(order => order.id === orderId);\n  }, [manufacturingOrders]);\n\n  // Update work order duration\n  const updateWorkOrderDuration = useCallback((orderId, workOrderId, duration) => {\n    setManufacturingOrders(prev => prev.map(order => {\n      if (order.id === orderId) {\n        return {\n          ...order,\n          workOrders: order.workOrders.map(wo => wo.id === workOrderId ? {\n            ...wo,\n            realDuration: duration\n          } : wo)\n        };\n      }\n      return order;\n    }));\n  }, []);\n\n  // Generate new ID for stock items\n  const generateStockId = useCallback(() => {\n    const maxId = stockItems.reduce((max, item) => {\n      const num = parseInt(item.id.split('-')[1]);\n      return num > max ? num : max;\n    }, 0);\n    return `STK-${String(maxId + 1).padStart(3, '0')}`;\n  }, [stockItems]);\n\n  // Add new stock item\n  const addStockItem = useCallback(newStockData => {\n    const newStock = {\n      id: generateStockId(),\n      ...newStockData,\n      totalValue: parseFloat(newStockData.unitCost || 0) * parseFloat(newStockData.onHand || 0)\n    };\n    setStockItems(prev => [...prev, newStock]);\n    return newStock.id;\n  }, [generateStockId]);\n\n  // Update stock item\n  const updateStockItem = useCallback((stockId, updatedData) => {\n    setStockItems(prev => prev.map(item => {\n      if (item.id === stockId) {\n        const updatedItem = {\n          ...item,\n          ...updatedData\n        };\n        // Recalculate total value\n        updatedItem.totalValue = parseFloat(updatedItem.unitCost || 0) * parseFloat(updatedItem.onHand || 0);\n        return updatedItem;\n      }\n      return item;\n    }));\n  }, []);\n\n  // Delete stock item\n  const deleteStockItem = useCallback(stockId => {\n    setStockItems(prev => prev.filter(item => item.id !== stockId));\n  }, []);\n\n  // Get stock item by ID\n  const getStockItemById = useCallback(stockId => {\n    return stockItems.find(item => item.id === stockId);\n  }, [stockItems]);\n  const value = {\n    // Data\n    manufacturingOrders,\n    billsOfMaterials,\n    workOrders,\n    stockItems,\n    // Manufacturing Orders\n    updateOrderStatus,\n    addOrder,\n    updateOrder,\n    deleteOrder,\n    getOrderById,\n    generateOrderId,\n    // Bills of Materials\n    addBOM,\n    updateBOM,\n    deleteBOM,\n    getBOMById,\n    generateBOMId,\n    // Work Orders\n    updateWorkOrderDuration,\n    // Stock Items\n    addStockItem,\n    updateStockItem,\n    deleteStockItem,\n    getStockItemById,\n    generateStockId\n  };\n  return /*#__PURE__*/_jsxDEV(ManufacturingContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 513,\n    columnNumber: 5\n  }, this);\n};\n_s2(ManufacturingProvider, \"DwxsCzUqyzHtmqkiP2oT3LbIvzk=\");\n_c = ManufacturingProvider;\nvar _c;\n$RefreshReg$(_c, \"ManufacturingProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","ManufacturingContext","useManufacturing","_s","context","Error","initialManufacturingOrders","id","finishedProduct","quantity","scheduleDate","status","billOfMaterialId","priority","reference","createdDate","estimatedDuration","realDuration","components","component","toConsume","units","consumed","workOrders","operation","workCenter","expectedDuration","initialBillsOfMaterials","duration","initialWorkOrders","manufacturingOrderId","product","initialStockItems","unitCost","unit","totalValue","onHand","freeToUse","incoming","outgoing","ManufacturingProvider","children","_s2","manufacturingOrders","setManufacturingOrders","billsOfMaterials","setBillsOfMaterials","setWorkOrders","stockItems","setStockItems","generateOrderId","maxId","reduce","max","order","num","parseInt","split","String","padStart","generateBOMId","bom","updateOrderStatus","orderId","newStatus","prev","map","updatedOrder","wo","addOrder","newOrderData","newOrder","Date","toISOString","updateOrder","updatedData","deleteOrder","filter","addBOM","newBOMData","newBOM","updateBOM","bomId","deleteBOM","getBOMById","find","getOrderById","updateWorkOrderDuration","workOrderId","generateStockId","item","addStockItem","newStockData","newStock","parseFloat","updateStockItem","stockId","updatedItem","deleteStockItem","getStockItemById","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/Sahana Madival/OneDrive/Desktop/od2/odooxnmit/frontend/src/context/ManufacturingContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\n\r\nconst ManufacturingContext = createContext();\r\n\r\nexport const useManufacturing = () => {\r\n  const context = useContext(ManufacturingContext);\r\n  if (!context) {\r\n    throw new Error('useManufacturing must be used within a ManufacturingProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Mock data with all possible statuses\r\nconst initialManufacturingOrders = [\r\n  {\r\n    id: 'MO-001',\r\n    finishedProduct: 'Widget A',\r\n    quantity: 100,\r\n    scheduleDate: '2024-01-15',\r\n    status: 'Draft',\r\n    billOfMaterialId: 'BOM-001',\r\n    priority: 'High',\r\n    reference: 'REF-001',\r\n    createdDate: '2024-01-10',\r\n    estimatedDuration: 240,\r\n    realDuration: 0,\r\n    components: [\r\n      { id: 1, component: 'Steel Frame', toConsume: 1, units: 'pcs', consumed: 0 },\r\n      { id: 2, component: 'Motor', toConsume: 1, units: 'pcs', consumed: 0 },\r\n      { id: 3, component: 'Screws', toConsume: 20, units: 'pcs', consumed: 0 }\r\n    ],\r\n    workOrders: [\r\n      { id: 1, operation: 'Assembly', workCenter: 'Assembly Line 1', expectedDuration: 120, realDuration: 0, status: 'Pending' },\r\n      { id: 2, operation: 'Quality Check', workCenter: 'QC Station', expectedDuration: 30, realDuration: 0, status: 'Pending' },\r\n      { id: 3, operation: 'Packaging', workCenter: 'Packaging Line', expectedDuration: 90, realDuration: 0, status: 'Pending' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'MO-002',\r\n    finishedProduct: 'Widget B',\r\n    quantity: 50,\r\n    scheduleDate: '2024-01-20',\r\n    status: 'Confirmed',\r\n    billOfMaterialId: 'BOM-002',\r\n    priority: 'Medium',\r\n    reference: 'REF-002',\r\n    createdDate: '2024-01-12',\r\n    estimatedDuration: 180,\r\n    realDuration: 0,\r\n    components: [\r\n      { id: 1, component: 'Aluminum Frame', toConsume: 1, units: 'pcs', consumed: 0 },\r\n      { id: 2, component: 'Circuit Board', toConsume: 1, units: 'pcs', consumed: 0 }\r\n    ],\r\n    workOrders: [\r\n      { id: 1, operation: 'Welding', workCenter: 'Welding Station', expectedDuration: 90, realDuration: 0, status: 'Pending' },\r\n      { id: 2, operation: 'Testing', workCenter: 'Test Lab', expectedDuration: 90, realDuration: 0, status: 'Pending' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'MO-003',\r\n    finishedProduct: 'Widget C',\r\n    quantity: 75,\r\n    scheduleDate: '2024-01-18',\r\n    status: 'In-Progress',\r\n    billOfMaterialId: 'BOM-003',\r\n    priority: 'High',\r\n    reference: 'REF-003',\r\n    createdDate: '2024-01-08',\r\n    estimatedDuration: 300,\r\n    realDuration: 150,\r\n    components: [\r\n      { id: 1, component: 'Plastic Housing', toConsume: 1, units: 'pcs', consumed: 1 },\r\n      { id: 2, component: 'LED Strip', toConsume: 2, units: 'meters', consumed: 1 }\r\n    ],\r\n    workOrders: [\r\n      { id: 1, operation: 'Molding', workCenter: 'Molding Station', expectedDuration: 180, realDuration: 150, status: 'In-Progress' },\r\n      { id: 2, operation: 'Assembly', workCenter: 'Assembly Line 2', expectedDuration: 120, realDuration: 0, status: 'Pending' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'MO-004',\r\n    finishedProduct: 'Widget D',\r\n    quantity: 200,\r\n    scheduleDate: '2024-01-10',\r\n    status: 'Done',\r\n    billOfMaterialId: 'BOM-004',\r\n    priority: 'Low',\r\n    reference: 'REF-004',\r\n    createdDate: '2024-01-05',\r\n    estimatedDuration: 400,\r\n    realDuration: 380,\r\n    components: [\r\n      { id: 1, component: 'Metal Casing', toConsume: 1, units: 'pcs', consumed: 1 },\r\n      { id: 2, component: 'Rubber Gasket', toConsume: 2, units: 'pcs', consumed: 2 }\r\n    ],\r\n    workOrders: [\r\n      { id: 1, operation: 'Cutting', workCenter: 'CNC Station', expectedDuration: 200, realDuration: 190, status: 'Done' },\r\n      { id: 2, operation: 'Finishing', workCenter: 'Finishing Station', expectedDuration: 200, realDuration: 190, status: 'Done' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'MO-005',\r\n    finishedProduct: 'Widget E',\r\n    quantity: 30,\r\n    scheduleDate: '2024-01-25',\r\n    status: 'Cancelled',\r\n    billOfMaterialId: 'BOM-005',\r\n    priority: 'Low',\r\n    reference: 'REF-005',\r\n    createdDate: '2024-01-15',\r\n    estimatedDuration: 150,\r\n    realDuration: 0,\r\n    components: [\r\n      { id: 1, component: 'Glass Panel', toConsume: 1, units: 'pcs', consumed: 0 }\r\n    ],\r\n    workOrders: [\r\n      { id: 1, operation: 'Polishing', workCenter: 'Polishing Station', expectedDuration: 150, realDuration: 0, status: 'Cancelled' }\r\n    ]\r\n  }\r\n];\r\n\r\nconst initialBillsOfMaterials = [\r\n  {\r\n    id: 'BOM-001',\r\n    finishedProduct: 'Widget A',\r\n    quantity: 1,\r\n    reference: 'WA-001',\r\n    components: [\r\n      { component: 'Steel Frame', toConsume: 1, units: 'pcs' },\r\n      { component: 'Motor', toConsume: 1, units: 'pcs' },\r\n      { component: 'Screws', toConsume: 20, units: 'pcs' }\r\n    ],\r\n    workOrders: [\r\n      { operation: 'Assembly', workCenter: 'Assembly Line 1', duration: '120' },\r\n      { operation: 'Quality Check', workCenter: 'QC Station', duration: '30' },\r\n      { operation: 'Packaging', workCenter: 'Packaging Line', duration: '90' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'BOM-002',\r\n    finishedProduct: 'Widget B',\r\n    quantity: 1,\r\n    reference: 'WB-001',\r\n    components: [\r\n      { component: 'Aluminum Frame', toConsume: 1, units: 'pcs' },\r\n      { component: 'Circuit Board', toConsume: 1, units: 'pcs' }\r\n    ],\r\n    workOrders: [\r\n      { operation: 'Welding', workCenter: 'Welding Station', duration: '90' },\r\n      { operation: 'Testing', workCenter: 'Test Lab', duration: '90' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'BOM-003',\r\n    finishedProduct: 'Widget C',\r\n    quantity: 1,\r\n    reference: 'WC-001',\r\n    components: [\r\n      { component: 'Plastic Housing', toConsume: 1, units: 'pcs' },\r\n      { component: 'LED Strip', toConsume: 2, units: 'meters' }\r\n    ],\r\n    workOrders: [\r\n      { operation: 'Molding', workCenter: 'Molding Station', duration: '180' },\r\n      { operation: 'Assembly', workCenter: 'Assembly Line 2', duration: '120' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'BOM-004',\r\n    finishedProduct: 'Widget D',\r\n    quantity: 1,\r\n    reference: 'WD-001',\r\n    components: [\r\n      { component: 'Metal Casing', toConsume: 1, units: 'pcs' },\r\n      { component: 'Rubber Gasket', toConsume: 2, units: 'pcs' }\r\n    ],\r\n    workOrders: [\r\n      { operation: 'Cutting', workCenter: 'CNC Station', duration: '200' },\r\n      { operation: 'Finishing', workCenter: 'Finishing Station', duration: '200' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'BOM-005',\r\n    finishedProduct: 'Widget E',\r\n    quantity: 1,\r\n    reference: 'WE-001',\r\n    components: [\r\n      { component: 'Glass Panel', toConsume: 1, units: 'pcs' }\r\n    ],\r\n    workOrders: [\r\n      { operation: 'Polishing', workCenter: 'Polishing Station', duration: '150' }\r\n    ]\r\n  }\r\n];\r\n\r\nconst initialWorkOrders = [\r\n  {\r\n    id: 'WO-001',\r\n    manufacturingOrderId: 'MO-001',\r\n    operation: 'Assembly',\r\n    workCenter: 'Assembly Line 1',\r\n    expectedDuration: 120,\r\n    realDuration: 0,\r\n    status: 'Pending',\r\n    product: 'Widget A',\r\n    quantity: 100\r\n  },\r\n  {\r\n    id: 'WO-002',\r\n    manufacturingOrderId: 'MO-001',\r\n    operation: 'Quality Check',\r\n    workCenter: 'QC Station',\r\n    expectedDuration: 30,\r\n    realDuration: 0,\r\n    status: 'Pending',\r\n    product: 'Widget A',\r\n    quantity: 100\r\n  },\r\n  {\r\n    id: 'WO-003',\r\n    manufacturingOrderId: 'MO-003',\r\n    operation: 'Molding',\r\n    workCenter: 'Molding Station',\r\n    expectedDuration: 180,\r\n    realDuration: 150,\r\n    status: 'In-Progress',\r\n    product: 'Widget C',\r\n    quantity: 75\r\n  },\r\n  {\r\n    id: 'WO-004',\r\n    manufacturingOrderId: 'MO-004',\r\n    operation: 'Cutting',\r\n    workCenter: 'CNC Station',\r\n    expectedDuration: 200,\r\n    realDuration: 190,\r\n    status: 'Done',\r\n    product: 'Widget D',\r\n    quantity: 200\r\n  }\r\n];\r\n\r\nconst initialStockItems = [\r\n  {\r\n    id: 'STK-001',\r\n    product: 'Steel Frame',\r\n    unitCost: 1200,\r\n    unit: 'pcs',\r\n    totalValue: 600000,\r\n    onHand: 500,\r\n    freeToUse: 270,\r\n    incoming: 0,\r\n    outgoing: 230\r\n  },\r\n  {\r\n    id: 'STK-002',\r\n    product: 'Motor',\r\n    unitCost: 500,\r\n    unit: 'pcs',\r\n    totalValue: 25000,\r\n    onHand: 50,\r\n    freeToUse: 30,\r\n    incoming: 20,\r\n    outgoing: 0\r\n  },\r\n  {\r\n    id: 'STK-003',\r\n    product: 'Aluminum Frame',\r\n    unitCost: 100,\r\n    unit: 'pcs',\r\n    totalValue: 2000,\r\n    onHand: 20,\r\n    freeToUse: 20,\r\n    incoming: 0,\r\n    outgoing: 0\r\n  },\r\n  {\r\n    id: 'STK-004',\r\n    product: 'Circuit Board',\r\n    unitCost: 300,\r\n    unit: 'pcs',\r\n    totalValue: 15000,\r\n    onHand: 50,\r\n    freeToUse: 40,\r\n    incoming: 10,\r\n    outgoing: 0\r\n  },\r\n  {\r\n    id: 'STK-005',\r\n    product: 'Plastic Housing',\r\n    unitCost: 150,\r\n    unit: 'pcs',\r\n    totalValue: 11250,\r\n    onHand: 75,\r\n    freeToUse: 50,\r\n    incoming: 25,\r\n    outgoing: 0\r\n  }\r\n];\r\n\r\nexport const ManufacturingProvider = ({ children }) => {\r\n  const [manufacturingOrders, setManufacturingOrders] = useState(initialManufacturingOrders);\r\n  const [billsOfMaterials, setBillsOfMaterials] = useState(initialBillsOfMaterials);\r\n  const [workOrders, setWorkOrders] = useState(initialWorkOrders);\r\n  const [stockItems, setStockItems] = useState(initialStockItems);\r\n\r\n  // Generate new ID for orders\r\n  const generateOrderId = useCallback(() => {\r\n    const maxId = manufacturingOrders.reduce((max, order) => {\r\n      const num = parseInt(order.id.split('-')[1]);\r\n      return num > max ? num : max;\r\n    }, 0);\r\n    return `MO-${String(maxId + 1).padStart(3, '0')}`;\r\n  }, [manufacturingOrders]);\r\n\r\n  // Generate new ID for BOMs\r\n  const generateBOMId = useCallback(() => {\r\n    const maxId = billsOfMaterials.reduce((max, bom) => {\r\n      const num = parseInt(bom.id.split('-')[1]);\r\n      return num > max ? num : max;\r\n    }, 0);\r\n    return `BOM-${String(maxId + 1).padStart(3, '0')}`;\r\n  }, [billsOfMaterials]);\r\n\r\n  // Update order status\r\n  const updateOrderStatus = useCallback((orderId, newStatus) => {\r\n    setManufacturingOrders(prev => \r\n      prev.map(order => {\r\n        if (order.id === orderId) {\r\n          const updatedOrder = { ...order, status: newStatus };\r\n          \r\n          // Update work orders status when manufacturing order status changes\r\n          if (newStatus === 'In-Progress') {\r\n            updatedOrder.workOrders = order.workOrders.map(wo => ({\r\n              ...wo,\r\n              status: wo.status === 'Pending' ? 'In-Progress' : wo.status\r\n            }));\r\n          } else if (newStatus === 'Done') {\r\n            updatedOrder.workOrders = order.workOrders.map(wo => ({\r\n              ...wo,\r\n              status: 'Done'\r\n            }));\r\n          } else if (newStatus === 'Cancelled') {\r\n            updatedOrder.workOrders = order.workOrders.map(wo => ({\r\n              ...wo,\r\n              status: 'Cancelled'\r\n            }));\r\n          }\r\n          \r\n          return updatedOrder;\r\n        }\r\n        return order;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  // Add new order\r\n  const addOrder = useCallback((newOrderData) => {\r\n    const newOrder = {\r\n      id: generateOrderId(),\r\n      ...newOrderData,\r\n      status: 'Draft',\r\n      createdDate: new Date().toISOString().split('T')[0],\r\n      realDuration: 0\r\n    };\r\n    setManufacturingOrders(prev => [...prev, newOrder]);\r\n    return newOrder.id;\r\n  }, [generateOrderId]);\r\n\r\n  // Update order\r\n  const updateOrder = useCallback((orderId, updatedData) => {\r\n    setManufacturingOrders(prev =>\r\n      prev.map(order =>\r\n        order.id === orderId ? { ...order, ...updatedData } : order\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  // Delete order\r\n  const deleteOrder = useCallback((orderId) => {\r\n    setManufacturingOrders(prev => prev.filter(order => order.id !== orderId));\r\n  }, []);\r\n\r\n  // Add new BOM\r\n  const addBOM = useCallback((newBOMData) => {\r\n    const newBOM = {\r\n      id: generateBOMId(),\r\n      ...newBOMData\r\n    };\r\n    setBillsOfMaterials(prev => [...prev, newBOM]);\r\n    return newBOM.id;\r\n  }, [generateBOMId]);\r\n\r\n  // Update BOM\r\n  const updateBOM = useCallback((bomId, updatedData) => {\r\n    setBillsOfMaterials(prev =>\r\n      prev.map(bom =>\r\n        bom.id === bomId ? { ...bom, ...updatedData } : bom\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  // Delete BOM\r\n  const deleteBOM = useCallback((bomId) => {\r\n    setBillsOfMaterials(prev => prev.filter(bom => bom.id !== bomId));\r\n  }, []);\r\n\r\n  // Get BOM by ID\r\n  const getBOMById = useCallback((bomId) => {\r\n    return billsOfMaterials.find(bom => bom.id === bomId);\r\n  }, [billsOfMaterials]);\r\n\r\n  // Get order by ID\r\n  const getOrderById = useCallback((orderId) => {\r\n    return manufacturingOrders.find(order => order.id === orderId);\r\n  }, [manufacturingOrders]);\r\n\r\n  // Update work order duration\r\n  const updateWorkOrderDuration = useCallback((orderId, workOrderId, duration) => {\r\n    setManufacturingOrders(prev =>\r\n      prev.map(order => {\r\n        if (order.id === orderId) {\r\n          return {\r\n            ...order,\r\n            workOrders: order.workOrders.map(wo =>\r\n              wo.id === workOrderId ? { ...wo, realDuration: duration } : wo\r\n            )\r\n          };\r\n        }\r\n        return order;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  // Generate new ID for stock items\r\n  const generateStockId = useCallback(() => {\r\n    const maxId = stockItems.reduce((max, item) => {\r\n      const num = parseInt(item.id.split('-')[1]);\r\n      return num > max ? num : max;\r\n    }, 0);\r\n    return `STK-${String(maxId + 1).padStart(3, '0')}`;\r\n  }, [stockItems]);\r\n\r\n  // Add new stock item\r\n  const addStockItem = useCallback((newStockData) => {\r\n    const newStock = {\r\n      id: generateStockId(),\r\n      ...newStockData,\r\n      totalValue: parseFloat(newStockData.unitCost || 0) * parseFloat(newStockData.onHand || 0)\r\n    };\r\n    setStockItems(prev => [...prev, newStock]);\r\n    return newStock.id;\r\n  }, [generateStockId]);\r\n\r\n  // Update stock item\r\n  const updateStockItem = useCallback((stockId, updatedData) => {\r\n    setStockItems(prev =>\r\n      prev.map(item => {\r\n        if (item.id === stockId) {\r\n          const updatedItem = { ...item, ...updatedData };\r\n          // Recalculate total value\r\n          updatedItem.totalValue = parseFloat(updatedItem.unitCost || 0) * parseFloat(updatedItem.onHand || 0);\r\n          return updatedItem;\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  // Delete stock item\r\n  const deleteStockItem = useCallback((stockId) => {\r\n    setStockItems(prev => prev.filter(item => item.id !== stockId));\r\n  }, []);\r\n\r\n  // Get stock item by ID\r\n  const getStockItemById = useCallback((stockId) => {\r\n    return stockItems.find(item => item.id === stockId);\r\n  }, [stockItems]);\r\n\r\n  const value = {\r\n    // Data\r\n    manufacturingOrders,\r\n    billsOfMaterials,\r\n    workOrders,\r\n    stockItems,\r\n    \r\n    // Manufacturing Orders\r\n    updateOrderStatus,\r\n    addOrder,\r\n    updateOrder,\r\n    deleteOrder,\r\n    getOrderById,\r\n    generateOrderId,\r\n    \r\n    // Bills of Materials\r\n    addBOM,\r\n    updateBOM,\r\n    deleteBOM,\r\n    getBOMById,\r\n    generateBOMId,\r\n    \r\n    // Work Orders\r\n    updateWorkOrderDuration,\r\n    \r\n    // Stock Items\r\n    addStockItem,\r\n    updateStockItem,\r\n    deleteStockItem,\r\n    getStockItemById,\r\n    generateStockId\r\n  };\r\n\r\n  return (\r\n    <ManufacturingContext.Provider value={value}>\r\n      {children}\r\n    </ManufacturingContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}