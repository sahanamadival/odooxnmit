{"ast":null,"code":"import api from \"./api\";\nexport const workOrderAPI = {\n  // Get all work orders\n  getWorkOrders: async (filters = {}) => {\n    try {\n      const response = await api.get(\"/workorders\", {\n        params: filters\n      });\n      return response.data || [];\n    } catch (error) {\n      console.error(\"Error fetching work orders:\", error);\n      return [];\n    }\n  },\n  // Get work order by ID\n  getWorkOrder: async id => {\n    try {\n      const response = await api.get(`/workorders/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching work order:\", error);\n      return null;\n    }\n  },\n  // Create work order\n  createWorkOrder: async workOrderData => {\n    try {\n      const response = await api.post(\"/workorders\", workOrderData);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating work order:\", error);\n      throw error;\n    }\n  },\n  // Update work order\n  updateWorkOrder: async (id, workOrderData) => {\n    try {\n      const response = await api.put(`/workorders/${id}`, workOrderData);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error updating work order:\", error);\n      throw error;\n    }\n  },\n  // Delete work order\n  deleteWorkOrder: async id => {\n    try {\n      const response = await api.delete(`/workorders/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error deleting work order:\", error);\n      throw error;\n    }\n  },\n  // Work order analysis\n  getWorkOrderAnalysis: async (filters = {}) => {\n    try {\n      const response = await api.get(\"/workorders/analysis\", {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching work order analysis:\", error);\n      return {\n        totalWorkOrders: 0,\n        completedWorkOrders: 0,\n        delayedWorkOrders: 0,\n        averageDelay: 0\n      };\n    }\n  }\n};","map":{"version":3,"names":["api","workOrderAPI","getWorkOrders","filters","response","get","params","data","error","console","getWorkOrder","id","createWorkOrder","workOrderData","post","updateWorkOrder","put","deleteWorkOrder","delete","getWorkOrderAnalysis","totalWorkOrders","completedWorkOrders","delayedWorkOrders","averageDelay"],"sources":["C:/Users/Sahana Madival/OneDrive/Desktop/od2/odooxnmit/frontend/src/services/workOrderAPI.js"],"sourcesContent":["import api from \"./api\";\r\n\r\nexport const workOrderAPI = {\r\n  // Get all work orders\r\n  getWorkOrders: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get(\"/workorders\", { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      console.error(\"Error fetching work orders:\", error);\r\n      return [];\r\n    }\r\n  },\r\n\r\n  // Get work order by ID\r\n  getWorkOrder: async (id) => {\r\n    try {\r\n      const response = await api.get(`/workorders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching work order:\", error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Create work order\r\n  createWorkOrder: async (workOrderData) => {\r\n    try {\r\n      const response = await api.post(\"/workorders\", workOrderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error creating work order:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update work order\r\n  updateWorkOrder: async (id, workOrderData) => {\r\n    try {\r\n      const response = await api.put(`/workorders/${id}`, workOrderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error updating work order:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete work order\r\n  deleteWorkOrder: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/workorders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error deleting work order:\", error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Work order analysis\r\n  getWorkOrderAnalysis: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get(\"/workorders/analysis\", { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching work order analysis:\", error);\r\n      return {\r\n        totalWorkOrders: 0,\r\n        completedWorkOrders: 0,\r\n        delayedWorkOrders: 0,\r\n        averageDelay: 0,\r\n      };\r\n    }\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,aAAa,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAa,EAAE;QAAEC,MAAM,EAAEH;MAAQ,CAAC,CAAC;MAClE,OAAOC,QAAQ,CAACG,IAAI,IAAI,EAAE;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO,EAAE;IACX;EACF,CAAC;EAED;EACAE,YAAY,EAAE,MAAOC,EAAE,IAAK;IAC1B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,eAAeM,EAAE,EAAE,CAAC;MACnD,OAAOP,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,IAAI;IACb;EACF,CAAC;EAED;EACAI,eAAe,EAAE,MAAOC,aAAa,IAAK;IACxC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,IAAI,CAAC,aAAa,EAAED,aAAa,CAAC;MAC7D,OAAOT,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,eAAe,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,aAAa,KAAK;IAC5C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,eAAeL,EAAE,EAAE,EAAEE,aAAa,CAAC;MAClE,OAAOT,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAS,eAAe,EAAE,MAAON,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,MAAM,CAAC,eAAeP,EAAE,EAAE,CAAC;MACtD,OAAOP,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAW,oBAAoB,EAAE,MAAAA,CAAOhB,OAAO,GAAG,CAAC,CAAC,KAAK;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,sBAAsB,EAAE;QAAEC,MAAM,EAAEH;MAAQ,CAAC,CAAC;MAC3E,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,OAAO;QACLY,eAAe,EAAE,CAAC;QAClBC,mBAAmB,EAAE,CAAC;QACtBC,iBAAiB,EAAE,CAAC;QACpBC,YAAY,EAAE;MAChB,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}