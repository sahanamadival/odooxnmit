{"ast":null,"code":"import api from './api';\nexport const manufacturingAPI = {\n  // Get all manufacturing orders\n  getManufacturingOrders: async (filters = {}) => {\n    try {\n      const response = await api.get('/manufacturing-orders', {\n        params: filters\n      });\n      return response.data || [];\n    } catch (error) {\n      // Return mock data for demo\n      return [{\n        id: 1,\n        orderId: 'MO-001',\n        product: 'Product 1',\n        quantity: 100,\n        startDate: '2024-01-15',\n        endDate: '2024-01-20',\n        status: 'New',\n        progress: 0,\n        goalDate: '2024-01-20'\n      }, {\n        id: 2,\n        orderId: 'MO-002',\n        product: 'Product 2',\n        quantity: 50,\n        startDate: '2024-01-16',\n        endDate: '2024-01-22',\n        status: 'In Progress',\n        progress: 45,\n        goalDate: '2024-01-22'\n      }, {\n        id: 3,\n        orderId: 'MO-003',\n        product: 'Product 3',\n        quantity: 75,\n        startDate: '2024-01-10',\n        endDate: '2024-01-18',\n        status: 'Completed',\n        progress: 100,\n        goalDate: '2024-01-18'\n      }, {\n        id: 4,\n        orderId: 'MO-004',\n        product: 'Product 4',\n        quantity: 200,\n        startDate: '2024-01-20',\n        endDate: '2024-01-25',\n        status: 'Cancelled',\n        progress: 0,\n        goalDate: '2024-01-25'\n      }];\n    }\n  },\n  // Get manufacturing order by ID\n  getManufacturingOrder: async id => {\n    const response = await api.get(`/manufacturing-orders/${id}`);\n    return response.data;\n  },\n  // Create new manufacturing order\n  createManufacturingOrder: async orderData => {\n    const response = await api.post('/manufacturing-orders', orderData);\n    return response.data;\n  },\n  // Update manufacturing order\n  updateManufacturingOrder: async (id, orderData) => {\n    const response = await api.put(`/manufacturing-orders/${id}`, orderData);\n    return response.data;\n  },\n  // Confirm manufacturing order\n  confirmManufacturingOrder: async id => {\n    const response = await api.post(`/manufacturing-orders/${id}/confirm`);\n    return response.data;\n  },\n  // Start manufacturing order\n  startManufacturingOrder: async id => {\n    const response = await api.post(`/manufacturing-orders/${id}/start`);\n    return response.data;\n  },\n  // Cancel manufacturing order\n  cancelManufacturingOrder: async id => {\n    const response = await api.post(`/manufacturing-orders/${id}/cancel`);\n    return response.data;\n  },\n  // Get work orders for manufacturing order\n  getWorkOrders: async manufacturingOrderId => {\n    const response = await api.get(`/manufacturing-orders/${manufacturingOrderId}/work-orders`);\n    return response.data;\n  },\n  // Get dashboard data\n  getDashboardData: async () => {\n    const response = await api.get('/dashboard');\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","manufacturingAPI","getManufacturingOrders","filters","response","get","params","data","error","id","orderId","product","quantity","startDate","endDate","status","progress","goalDate","getManufacturingOrder","createManufacturingOrder","orderData","post","updateManufacturingOrder","put","confirmManufacturingOrder","startManufacturingOrder","cancelManufacturingOrder","getWorkOrders","manufacturingOrderId","getDashboardData"],"sources":["D:/My_Projects/odoo/frontend/src/services/manufacturingAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const manufacturingAPI = {\r\n  // Get all manufacturing orders\r\n  getManufacturingOrders: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/manufacturing-orders', { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      // Return mock data for demo\r\n      return [\r\n        { id: 1, orderId: 'MO-001', product: 'Product 1', quantity: 100, startDate: '2024-01-15', endDate: '2024-01-20', status: 'New', progress: 0, goalDate: '2024-01-20' },\r\n        { id: 2, orderId: 'MO-002', product: 'Product 2', quantity: 50, startDate: '2024-01-16', endDate: '2024-01-22', status: 'In Progress', progress: 45, goalDate: '2024-01-22' },\r\n        { id: 3, orderId: 'MO-003', product: 'Product 3', quantity: 75, startDate: '2024-01-10', endDate: '2024-01-18', status: 'Completed', progress: 100, goalDate: '2024-01-18' },\r\n        { id: 4, orderId: 'MO-004', product: 'Product 4', quantity: 200, startDate: '2024-01-20', endDate: '2024-01-25', status: 'Cancelled', progress: 0, goalDate: '2024-01-25' }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Get manufacturing order by ID\r\n  getManufacturingOrder: async (id) => {\r\n    const response = await api.get(`/manufacturing-orders/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new manufacturing order\r\n  createManufacturingOrder: async (orderData) => {\r\n    const response = await api.post('/manufacturing-orders', orderData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update manufacturing order\r\n  updateManufacturingOrder: async (id, orderData) => {\r\n    const response = await api.put(`/manufacturing-orders/${id}`, orderData);\r\n    return response.data;\r\n  },\r\n\r\n  // Confirm manufacturing order\r\n  confirmManufacturingOrder: async (id) => {\r\n    const response = await api.post(`/manufacturing-orders/${id}/confirm`);\r\n    return response.data;\r\n  },\r\n\r\n  // Start manufacturing order\r\n  startManufacturingOrder: async (id) => {\r\n    const response = await api.post(`/manufacturing-orders/${id}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  // Cancel manufacturing order\r\n  cancelManufacturingOrder: async (id) => {\r\n    const response = await api.post(`/manufacturing-orders/${id}/cancel`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get work orders for manufacturing order\r\n  getWorkOrders: async (manufacturingOrderId) => {\r\n    const response = await api.get(`/manufacturing-orders/${manufacturingOrderId}/work-orders`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get dashboard data\r\n  getDashboardData: async () => {\r\n    const response = await api.get('/dashboard');\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}