{"ast":null,"code":"import api from './api';\nexport const workOrderAPI = {\n  // Get all work orders\n  getWorkOrders: async (filters = {}) => {\n    try {\n      const response = await api.get('/workorders', {\n        params: filters\n      });\n      return response.data || [];\n    } catch (error) {\n      console.error('Error fetching work orders:', error);\n      return [{\n        id: 1,\n        workNumber: 'WO-001',\n        description: 'Work Order 1',\n        status: 'open',\n        duration: 180,\n        actualTime: 0,\n        workerExperience: 2,\n        machineEfficiency: 0.8,\n        delayRisk: 'Low'\n      }, {\n        id: 2,\n        workNumber: 'WO-002',\n        description: 'Work Order 2',\n        status: 'open',\n        duration: 120,\n        actualTime: 0,\n        workerExperience: 3,\n        machineEfficiency: 0.9,\n        delayRisk: 'Low'\n      }, {\n        id: 3,\n        workNumber: 'WO-003',\n        description: 'Work Order 3',\n        status: 'open',\n        duration: 240,\n        actualTime: 180,\n        workerExperience: 1,\n        machineEfficiency: 0.7,\n        delayRisk: 'Medium'\n      }, {\n        id: 4,\n        workNumber: 'WO-004',\n        description: 'Work Order 4',\n        status: 'open',\n        duration: 200,\n        actualTime: 220,\n        workerExperience: 2,\n        machineEfficiency: 0.6,\n        delayRisk: 'High'\n      }];\n    }\n  },\n  // Get work order by ID\n  getWorkOrder: async id => {\n    try {\n      const response = await api.get(`/workorders/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching work order:', error);\n      throw error;\n    }\n  },\n  // Create new work order\n  createWorkOrder: async workOrderData => {\n    try {\n      const response = await api.post('/workorders', workOrderData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating work order:', error);\n      throw error;\n    }\n  },\n  // Update work order\n  updateWorkOrder: async (id, workOrderData) => {\n    try {\n      const response = await api.put(`/workorders/${id}`, workOrderData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating work order:', error);\n      throw error;\n    }\n  },\n  // Delete work order\n  deleteWorkOrder: async id => {\n    try {\n      const response = await api.delete(`/workorders/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting work order:', error);\n      throw error;\n    }\n  },\n  // Get work order analysis\n  getWorkOrderAnalysis: async (filters = {}) => {\n    try {\n      const response = await api.get('/workorders/analysis', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching work order analysis:', error);\n      return {\n        totalWorkOrders: 0,\n        completedWorkOrders: 0,\n        delayedWorkOrders: 0,\n        averageDelay: 0\n      };\n    }\n  }\n};","map":{"version":3,"names":["api","workOrderAPI","getWorkOrders","filters","response","get","params","data","error","console","id","workNumber","description","status","duration","actualTime","workerExperience","machineEfficiency","delayRisk","getWorkOrder","createWorkOrder","workOrderData","post","updateWorkOrder","put","deleteWorkOrder","delete","getWorkOrderAnalysis","totalWorkOrders","completedWorkOrders","delayedWorkOrders","averageDelay"],"sources":["C:/Users/Sahana Madival/OneDrive/Desktop/odooxnmit/frontend/src/services/workOrderAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const workOrderAPI = {\r\n  // Get all work orders\r\n  getWorkOrders: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/workorders', { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      console.error('Error fetching work orders:', error);\r\n      return [\r\n        { id: 1, workNumber: 'WO-001', description: 'Work Order 1', status: 'open', duration: 180, actualTime: 0, workerExperience: 2, machineEfficiency: 0.8, delayRisk: 'Low' },\r\n        { id: 2, workNumber: 'WO-002', description: 'Work Order 2', status: 'open', duration: 120, actualTime: 0, workerExperience: 3, machineEfficiency: 0.9, delayRisk: 'Low' },\r\n        { id: 3, workNumber: 'WO-003', description: 'Work Order 3', status: 'open', duration: 240, actualTime: 180, workerExperience: 1, machineEfficiency: 0.7, delayRisk: 'Medium' },\r\n        { id: 4, workNumber: 'WO-004', description: 'Work Order 4', status: 'open', duration: 200, actualTime: 220, workerExperience: 2, machineEfficiency: 0.6, delayRisk: 'High' }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Get work order by ID\r\n  getWorkOrder: async (id) => {\r\n    try {\r\n      const response = await api.get(`/workorders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching work order:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create new work order\r\n  createWorkOrder: async (workOrderData) => {\r\n    try {\r\n      const response = await api.post('/workorders', workOrderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating work order:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update work order\r\n  updateWorkOrder: async (id, workOrderData) => {\r\n    try {\r\n      const response = await api.put(`/workorders/${id}`, workOrderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating work order:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete work order\r\n  deleteWorkOrder: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/workorders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error deleting work order:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get work order analysis\r\n  getWorkOrderAnalysis: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/workorders/analysis', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching work order analysis:', error);\r\n      return {\r\n        totalWorkOrders: 0,\r\n        completedWorkOrders: 0,\r\n        delayedWorkOrders: 0,\r\n        averageDelay: 0\r\n      };\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,YAAY,GAAG;EAC1B;EACAC,aAAa,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAa,EAAE;QAAEC,MAAM,EAAEH;MAAQ,CAAC,CAAC;MAClE,OAAOC,QAAQ,CAACG,IAAI,IAAI,EAAE;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO,CACL;QAAEE,EAAE,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,WAAW,EAAE,cAAc;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,UAAU,EAAE,CAAC;QAAEC,gBAAgB,EAAE,CAAC;QAAEC,iBAAiB,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAM,CAAC,EACzK;QAAER,EAAE,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,WAAW,EAAE,cAAc;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,UAAU,EAAE,CAAC;QAAEC,gBAAgB,EAAE,CAAC;QAAEC,iBAAiB,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAM,CAAC,EACzK;QAAER,EAAE,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,WAAW,EAAE,cAAc;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,UAAU,EAAE,GAAG;QAAEC,gBAAgB,EAAE,CAAC;QAAEC,iBAAiB,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAS,CAAC,EAC9K;QAAER,EAAE,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,WAAW,EAAE,cAAc;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,GAAG;QAAEC,UAAU,EAAE,GAAG;QAAEC,gBAAgB,EAAE,CAAC;QAAEC,iBAAiB,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAO,CAAC,CAC7K;IACH;EACF,CAAC;EAED;EACAC,YAAY,EAAE,MAAOT,EAAE,IAAK;IAC1B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,eAAeK,EAAE,EAAE,CAAC;MACnD,OAAON,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAY,eAAe,EAAE,MAAOC,aAAa,IAAK;IACxC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMJ,GAAG,CAACsB,IAAI,CAAC,aAAa,EAAED,aAAa,CAAC;MAC7D,OAAOjB,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAe,eAAe,EAAE,MAAAA,CAAOb,EAAE,EAAEW,aAAa,KAAK;IAC5C,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMJ,GAAG,CAACwB,GAAG,CAAC,eAAed,EAAE,EAAE,EAAEW,aAAa,CAAC;MAClE,OAAOjB,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAiB,eAAe,EAAE,MAAOf,EAAE,IAAK;IAC7B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAAC0B,MAAM,CAAC,eAAehB,EAAE,EAAE,CAAC;MACtD,OAAON,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAmB,oBAAoB,EAAE,MAAAA,CAAOxB,OAAO,GAAG,CAAC,CAAC,KAAK;IAC5C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,sBAAsB,EAAE;QAAEC,MAAM,EAAEH;MAAQ,CAAC,CAAC;MAC3E,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,OAAO;QACLoB,eAAe,EAAE,CAAC;QAClBC,mBAAmB,EAAE,CAAC;QACtBC,iBAAiB,EAAE,CAAC;QACpBC,YAAY,EAAE;MAChB,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}