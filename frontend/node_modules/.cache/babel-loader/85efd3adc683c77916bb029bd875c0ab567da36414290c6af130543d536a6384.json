{"ast":null,"code":"import api from './api';\nexport const stockAPI = {\n  // Get all stock items\n  getStockItems: async (filters = {}) => {\n    try {\n      const response = await api.get('/stock', {\n        params: filters\n      });\n      return response.data || [];\n    } catch (error) {\n      return [{\n        id: 1,\n        product: 'Product 1',\n        unitCost: 25.50,\n        unit: 'Pieces',\n        totalValue: 2550,\n        onHand: 100,\n        freeToUse: 80,\n        incoming: 20,\n        outgoing: 0\n      }, {\n        id: 2,\n        product: 'Product 2',\n        unitCost: 15.75,\n        unit: 'Pieces',\n        totalValue: 1575,\n        onHand: 100,\n        freeToUse: 100,\n        incoming: 0,\n        outgoing: 0\n      }, {\n        id: 3,\n        product: 'Product 3',\n        unitCost: 45.00,\n        unit: 'Pieces',\n        totalValue: 4500,\n        onHand: 100,\n        freeToUse: 60,\n        incoming: 40,\n        outgoing: 0\n      }, {\n        id: 4,\n        product: 'Product 4',\n        unitCost: 12.25,\n        unit: 'Pieces',\n        totalValue: 1225,\n        onHand: 100,\n        freeToUse: 100,\n        incoming: 0,\n        outgoing: 0\n      }];\n    }\n  },\n  // Get stock item by ID\n  getStockItem: async id => {\n    const response = await api.get(`/stock/${id}`);\n    return response.data;\n  },\n  // Create new stock item\n  createStockItem: async stockData => {\n    const response = await api.post('/stock', stockData);\n    return response.data;\n  },\n  // Update stock item\n  updateStockItem: async (id, stockData) => {\n    const response = await api.put(`/stock/${id}`, stockData);\n    return response.data;\n  },\n  // Get bills of materials\n  getBillsOfMaterials: async (filters = {}) => {\n    const response = await api.get('/bills-of-materials', {\n      params: filters\n    });\n    return response.data;\n  },\n  // Get bill of materials by ID\n  getBillOfMaterials: async id => {\n    const response = await api.get(`/bills-of-materials/${id}`);\n    return response.data;\n  },\n  // Create bill of materials\n  createBillOfMaterials: async bomData => {\n    const response = await api.post('/bills-of-materials', bomData);\n    return response.data;\n  },\n  // Update bill of materials\n  updateBillOfMaterials: async (id, bomData) => {\n    const response = await api.put(`/bills-of-materials/${id}`, bomData);\n    return response.data;\n  },\n  // Get work centers\n  getWorkCenters: async (filters = {}) => {\n    const response = await api.get('/work-centers', {\n      params: filters\n    });\n    return response.data;\n  },\n  // Get work center by ID\n  getWorkCenter: async id => {\n    const response = await api.get(`/work-centers/${id}`);\n    return response.data;\n  },\n  // Create work center\n  createWorkCenter: async workCenterData => {\n    const response = await api.post('/work-centers', workCenterData);\n    return response.data;\n  },\n  // Update work center\n  updateWorkCenter: async (id, workCenterData) => {\n    const response = await api.put(`/work-centers/${id}`, workCenterData);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","stockAPI","getStockItems","filters","response","get","params","data","error","id","product","unitCost","unit","totalValue","onHand","freeToUse","incoming","outgoing","getStockItem","createStockItem","stockData","post","updateStockItem","put","getBillsOfMaterials","getBillOfMaterials","createBillOfMaterials","bomData","updateBillOfMaterials","getWorkCenters","getWorkCenter","createWorkCenter","workCenterData","updateWorkCenter"],"sources":["D:/OD/odooxnmit/frontend/src/services/stockAPI.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const stockAPI = {\r\n  // Get all stock items\r\n  getStockItems: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/stock', { params: filters });\r\n      return response.data || [];\r\n    } catch (error) {\r\n      return [\r\n        { id: 1, product: 'Product 1', unitCost: 25.50, unit: 'Pieces', totalValue: 2550, onHand: 100, freeToUse: 80, incoming: 20, outgoing: 0 },\r\n        { id: 2, product: 'Product 2', unitCost: 15.75, unit: 'Pieces', totalValue: 1575, onHand: 100, freeToUse: 100, incoming: 0, outgoing: 0 },\r\n        { id: 3, product: 'Product 3', unitCost: 45.00, unit: 'Pieces', totalValue: 4500, onHand: 100, freeToUse: 60, incoming: 40, outgoing: 0 },\r\n        { id: 4, product: 'Product 4', unitCost: 12.25, unit: 'Pieces', totalValue: 1225, onHand: 100, freeToUse: 100, incoming: 0, outgoing: 0 }\r\n      ];\r\n    }\r\n  },\r\n\r\n  // Get stock item by ID\r\n  getStockItem: async (id) => {\r\n    const response = await api.get(`/stock/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new stock item\r\n  createStockItem: async (stockData) => {\r\n    const response = await api.post('/stock', stockData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update stock item\r\n  updateStockItem: async (id, stockData) => {\r\n    const response = await api.put(`/stock/${id}`, stockData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get bills of materials\r\n  getBillsOfMaterials: async (filters = {}) => {\r\n    const response = await api.get('/bills-of-materials', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get bill of materials by ID\r\n  getBillOfMaterials: async (id) => {\r\n    const response = await api.get(`/bills-of-materials/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create bill of materials\r\n  createBillOfMaterials: async (bomData) => {\r\n    const response = await api.post('/bills-of-materials', bomData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update bill of materials\r\n  updateBillOfMaterials: async (id, bomData) => {\r\n    const response = await api.put(`/bills-of-materials/${id}`, bomData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get work centers\r\n  getWorkCenters: async (filters = {}) => {\r\n    const response = await api.get('/work-centers', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Get work center by ID\r\n  getWorkCenter: async (id) => {\r\n    const response = await api.get(`/work-centers/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create work center\r\n  createWorkCenter: async (workCenterData) => {\r\n    const response = await api.post('/work-centers', workCenterData);\r\n    return response.data;\r\n  },\r\n\r\n  // Update work center\r\n  updateWorkCenter: async (id, workCenterData) => {\r\n    const response = await api.put(`/work-centers/${id}`, workCenterData);\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}